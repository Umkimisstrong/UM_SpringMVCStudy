SELECT USER
FROM DUAL;
--==>> SCOTT

/*
○ 데이터베이스 관련 객체 준비
   - 사용 계정 : scott
   - 테이블 : TBL_STUDENT
     ㆍ테이블 구조 : SID	NUMBER		PK
 		   , NAME	VARCHAR2(30)
		   , TEL	VARCHAR2(40)

   - 테이블 : TBL_GRADE
     ㆍ테이블 구조 : SID	NUMBER		-PK / FK
		   , SUB1	NUMBER(30)
		   , SUB2	NUMBER(3)
		   , SUB3	NUMBER(3)
   - 뷰 : STUDENTVIEW
     ㆍ뷰 구조 : SID, NAME, TEL, SUB
				 --- 참조 레코드 수
   - 뷰 : GRADEVIEW
     ㆍ뷰 구조 : SID, NAME, SUB1, SUB2, SUB3, TOT, AVG, CH
					      ---  ---  --
					      총점 평균 등급(합격, 과락, 불합격)
*/


CREATE TABLE TBL_STUDENT
( SID	NUMBER		
, NAME	VARCHAR2(30)
, TEL	VARCHAR2(40)
, CONSTRAINT STUDENT_SID_PK PRIMARY KEY(SID)
);
--==>> Table TBL_STUDENT이(가) 생성되었습니다.

INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(1, '이호석', '010-1111-1111');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(2, '최선하', '010-2222-1111');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(3, '오이삭', '010-1111-3333');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(4, '임소민', '010-4444-1111');
--==>> 1 행 이(가) 삽입되었습니다. * 4

CREATE TABLE TBL_GRADE
( SID   NUMBER
, SUB1  NUMBER(3)
, SUB2  NUMBER(3)
, SUB3  NUMBER(3)
, CONSTRAINT GRADE_SID_PK PRIMARY KEY(SID)
, CONSTRAINT GRADE_SID_FK FOREIGN KEY(SID)
             REFERENCES TBL_STUDENT(SID)
, CONSTRAINT GRADE_SUB1_CK CHECK(SUB1 BETWEEN 0 AND 100)
, CONSTRAINT GRADE_SUB2_CK CHECK(SUB2 BETWEEN 0 AND 100)
, CONSTRAINT GRADE_SUB3_CK CHECK(SUB3 BETWEEN 0 AND 100)
);
--==>> Table TBL_GRADE이(가) 생성되었습니다.

INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(1, 90, 80, 70);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(2, 100, 99, 89);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(3, 78, 79, 52);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(4, 68, 78, 88);
--==>> 1 행 이(가) 삽입되었습니다.

SELECT *
FROM TBL_STUDENT;
/*
1	이호석	010-1111-1111
2	최선하	010-2222-1111
3	오이삭	010-1111-3333
4	임소민	010-4444-1111
*/

SELECT COUNT(*) AS COUNT
FROM TBL_STUDENT;

SELECT *
FROM TBL_GRADE;
/*
1	90	80	70
2	100	99	89
3	78	79	52
4	68	78	88
*/

COMMIT;
--==>> 커밋 완료.

CREATE OR REPLACE VIEW STUDENTVIEW
AS
SELECT S.SID, S.NAME, S.TEL ,(SELECT COUNT(*) FROM TBL_GRADE WHERE SID=S.SID) AS SUB
FROM TBL_STUDENT S
ORDER BY S.SID;
--==>> View STUDENTVIEW이(가) 생성되었습니다.

/*
1	이호석	010-1111-1111	1
2	최선하	010-2222-1111	1
3	오이삭	010-1111-3333	1
4	임소민	010-4444-1111	1
*/
SELECT SID, NAME, TEL, SUB
FROM STUDENTVIEW;

CREATE OR REPLACE VIEW GRADEVIEW
AS     
SELECT S.SID AS SID
     , S.NAME AS NAME
     , G.SUB1 AS SUB1
     , G.SUB2 AS SUB2
     , G.SUB3 AS SUB3
     , (G.SUB1 + G.SUB2 + G.SUB3) AS TOT
     , ROUND((G.SUB1 + G.SUB2 + G.SUB3)/3) AS AVG
     , (CASE WHEN (G.SUB1 + G.SUB2 + G.SUB3)/3 < 60 THEN '불합격'
             WHEN (G.SUB1 <= 40) OR (G.SUB2 <= 40) OR (G.SUB3 <=40 ) THEN '과락'
             ELSE '합격'
             END) AS CH 
FROM TBL_STUDENT S JOIN TBL_GRADE G
ON S.SID = G.SID;
--==>> View GRADEVIEW이(가) 생성되었습니다.



SELECT SID, NAME, SUB1, SUB2, SUB3, TOT, AVG, CH
FROM GRADEVIEW;

SELECT COUNT(*) AS COUNT
FROM GRADEVIEW;

DELETE 
FROM TBL_STUDENT
WHERE SID = ?;



